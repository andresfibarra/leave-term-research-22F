{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "9a2a2d9e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from scipy.integrate import odeint\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ddba8b67",
   "metadata": {},
   "outputs": [],
   "source": [
    "tstart = 0\n",
    "tstop = 60\n",
    "increment = 0.1\n",
    "\n",
    "# Initial condition\n",
    "x_init = [0,0]\n",
    "t = np.arange(tstart,tstop+1,increment)\n",
    "\n",
    "# Function that returns dx/dt\n",
    "def mydiff(x, t):\n",
    "    c = 4 # Damping constant\n",
    "    k = 2 # Stiffness of the spring\n",
    "    m = 20 # Mass\n",
    "    F = 5\n",
    "    dx1dt = x[1]\n",
    "    dx2dt = (F - c*x[1] - k*x[0])/m\n",
    "    dxdt = [dx1dt, dx2dt]\n",
    "    return dxdt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4a02e1be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Solve ODE\n",
    "x = odeint(mydiff, x_init, t)\n",
    "x1 = x[:,0]\n",
    "x2 = x[:,1]\n",
    "# Plot the Results\n",
    "plt.plot(t,x1)\n",
    "plt.plot(t,x2)\n",
    "plt.title('Simulation of Mass-Spring-Damper System')\n",
    "plt.xlabel('t')\n",
    "plt.ylabel('x(t)')\n",
    "plt.legend([\"x1\", \"x2\"])\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "75519c0b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
